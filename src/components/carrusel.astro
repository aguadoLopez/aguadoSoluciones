<section id="carrusel" class="carousel-section h-[66vh] mb-10">
  <div class="relative w-screen h-full overflow-hidden">

    <!-- Flechas superpuestas -->
    <button class="absolute left-4 top-1/2 -translate-y-1/2 z-10 text-4xl text-white" id="prevBtn">
      ❮
    </button>
    <button class="absolute right-4 top-1/2 -translate-y-1/2 z-10 text-4xl text-white" id="nextBtn">
      ❯
    </button>

    <!--Aguado Soluciones -->
    <div class="absolute left-8 top-24 left-0 md:top-36 md:left-12 lg:top-24 lg:left-24 z-10 text-center">
      <h3 class="text-4xl md:text-5xl lg:text-6xl font-brigshotOne font-bold mb-0 md:mb-2 lg:mb-2 text-verde ">Aguado</h3>
      <h3 class="text-xl md:text-2xl lg:text-4xl font-bold ml-24 md:ml-28 lg:ml-40 text-negro">Soluciones</h3>
    </div>
    
    <!-- Contenedor del carrusel -->
    <div class="carousel-container w-full h-full">
      <div id="carousel-items" class="carousel-items flex h-full transition-transform duration-300 ease-in-out">
        <!-- Elementos insertados dinámicamente -->
      </div>
    </div>

  </div>
</section>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const carouselItems = document.getElementById('carousel-items');
    const container = document.querySelector('.carousel-container') as HTMLElement;


    let currentIndex = 0;

    function updateCarousel() {
      if (container instanceof HTMLElement && carouselItems instanceof HTMLElement) {
        const width = container.offsetWidth;
        carouselItems.style.transform = `translateX(-${currentIndex * width}px)`;
      }
    }

    if (prevBtn && nextBtn && carouselItems && container) {
      prevBtn.addEventListener('click', () => {
        const itemCount = carouselItems.children.length;
        currentIndex = (currentIndex - 1 + itemCount) % itemCount;
        updateCarousel();
      });

      nextBtn.addEventListener('click', () => {
        const itemCount = carouselItems.children.length;
        currentIndex = (currentIndex + 1) % itemCount;
        updateCarousel();
      });

      window.addEventListener('resize', () => {
        // Reajustar tamaños al cambiar el ancho de la ventana
        const containerWidth = container.offsetWidth;
        document.querySelectorAll('.carousel-item').forEach(item => {
          (item as HTMLElement).style.width = `${containerWidth}px`;
        });
        updateCarousel();
      });

      // Cargar contenido dinámicamente
      fetch(`http://localhost:4321/api/servicios?page=1&limit=5`)
        .then(response => response.json())
        .then(data => {
          const servicios = data.servicios;
          carouselItems.innerHTML = servicios.map(servicio => `
            <div class="carousel-item flex-shrink-0 h-[66vh] bg-[40%_center] md:bg-center rounded-lg flex justify-center items-center "
                 style="background-image: url('${servicio.imagen}'); background-size: cover;">
              <div class="text-center text-white">
              </div>
            </div>
          `).join('');

          // Asegurar que cada item tenga el mismo ancho que el contenedor
          const containerWidth = container.offsetWidth;
          document.querySelectorAll('.carousel-item').forEach(item => {
            (item as HTMLElement).style.width = `${containerWidth}px`;
          });

          updateCarousel();
        });
    }
  });
</script>
